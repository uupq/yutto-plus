# YuttoPlus 批量下载配置文件
# 适用场景: 批量下载大量视频，优先速度而非质量

description: "批量下载配置 - 速度优先"

# === 基础设置 ===
quality: 64           # 视频质量: 720P高清 (平衡质量和速度)
audio_quality: 30232  # 音频质量: 128kbps (节省空间)
output_dir: "./Batch_Downloads"  # 批量下载目录
format: "mp4"         # 输出格式: MP4兼容性好

# === 登录设置 ===
sessdata: "eac50cae%2C1749094831%2C5a8bf%2Ac2CjAXtG6A6ADJDGdz3HyrCcFgnvEpoTd44dMDl1PfE_Vj6p6xGwdAO94TQqeW3WBhVDwSVlhXQThEYjlvRl81MmZVRGVuSk92Q3VGTHhNRDNKM21rblhwUy1keWZGQnc0N0xoelJMRlFxdzhteUNubXp4a2pyc2d2M0xrQ2llNVUzUi1HZjNxSUxnIIEC"


# === 并行设置 ===
concurrent: 2         # 高并发数量: 快速批量下载
parallel_display: "table"  # 表格显示: 清晰的进度界面

# === 下载内容 (精简) ===
audio_only: false     
no_video: false       
no_danmaku: true      # 跳过弹幕: 节省时间和空间
no_cover: true        # 跳过封面: 节省时间

# === 格式设置 ===
video_codec: "avc"    # AVC编码: 兼容性最好
audio_format: "aac"   # AAC音频: 文件较小
audio_bitrate: "128k" # 较低比特率: 节省空间

# === 其他设置 ===
overwrite: false      # 避免重复下载
enable_resume: true   # 支持断点续传: 批量下载可能中断
quiet: false         
verbose: false        # 不显示详细信息: 减少输出

# === 批量下载建议 ===
# 使用方法:
# python yutto-plus.py --config yutto-batch-download.yaml url1 url2 url3 ...
#
# 或者从文件读取URL列表:
# python yutto-plus.py --config yutto-batch-download.yaml $(cat urls.txt)
#
# 推荐设置:
# - 选择合适的画质 (64=720P, 32=480P)
# - 关闭弹幕和封面下载
# - 使用高并发数量
# - 选择兼容性好的格式

# === 画质建议 ===
# 大量下载建议画质选择:
# 64 (720P): 平衡质量和大小
# 32 (480P): 最小文件，快速下载  
# 80 (1080P): 如果网络和存储充足

# === 显示模式说明 ===
# table: 完整表格界面，显示所有任务进度 (推荐)
# simple: 简单输出，只显示基本信息
# silent: 静默模式，最少输出 